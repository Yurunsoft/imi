name: Static Code Analysis

on:
  push:
    paths-ignore:
      - "doc/**"
      - "mddoc/**"
      - "res/**"
      - "website/**"
      - ".markdownlint.json"
      - "README.md"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        swoole-docker: [5.0-php8.1]
    env:
      SWOOLE_DOCKER_VERSION: ${{ matrix.swoole-docker }}
      POSTGRESQL_VERSION: ""
      ENV_SERVICE: swoole-only
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        run: |
          docker-compose -f ./.github/docker-compose.yml up -d ${ENV_SERVICE}
          docker exec ${ENV_SERVICE} php -v
          docker exec ${ENV_SERVICE} php -m
          docker exec ${ENV_SERVICE} php --ri swoole
          docker exec ${ENV_SERVICE} composer -V
          docker exec ${ENV_SERVICE} composer update --no-interaction --prefer-dist --no-progress
          docker exec ${ENV_SERVICE} bash -c "cd split-repository && composer install --no-interaction --prefer-dist --no-progress"
          echo "test_prepared=1" >> $GITHUB_ENV

      - name: Analyse core
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh core

      - name: Analyse amqp
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh amqp

      - name: Analyse apidoc
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh apidoc

      - name: Analyse fpm
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh fpm

      - name: Analyse grpc
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh grpc

      - name: Analyse jwt
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh jwt

      - name: Analyse kafka
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh kafka

      - name: Analyse mqtt
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh mqtt

      - name: Analyse pgsql
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh pgsql

      - name: Analyse queue
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh queue

      - name: Analyse rate-limit
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh rate-limit

      - name: Analyse roadrunner
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh roadrunner

      - name: Analyse rpc
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh rpc

      - name: Analyse shared-memory
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh shared-memory

      - name: Analyse smarty
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh smarty

      - name: Analyse snowflake
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh snowflake

      - name: Analyse swoole
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh swoole

      - name: Analyse swoole-tracker
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh swoole-tracker

      - name: Analyse workerman
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh workerman

      - name: Analyse workerman-gateway
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh workerman-gateway

      - name: Analyse phar
        if: ${{ env.test_prepared && always() }}
        run: |
          docker exec ${ENV_SERVICE} ./dev/phpstan.sh phar

<?php

declare(strict_types=1);

namespace Imi\Server\Http\Message\Proxy;

use Imi\RequestContextProxy\Annotation\RequestContextProxy;
use Imi\RequestContextProxy\BaseRequestContextProxy;

/**
 * @RequestContextProxy(class="Imi\Server\Http\Message\Contract\IHttpRequest", name="request")
 *
 * @method        \Imi\Util\Socket\IPEndPoint              getClientAddress()
 * @method static \Imi\Util\Socket\IPEndPoint              getClientAddress()
 * @method        mixed                                    getServerParam(string $name, mixed $default = NULL)
 * @method static mixed                                    getServerParam(string $name, mixed $default = NULL)
 * @method        string|null                              getCookie(string $name, ?string $default = NULL)
 * @method static string|null                              getCookie(string $name, ?string $default = NULL)
 * @method        static                                   setCookieParams(array $cookies)
 * @method static static                                   setCookieParams(array $cookies)
 * @method        static                                   setQueryParams(array $query)
 * @method static static                                   setQueryParams(array $query)
 * @method        static                                   setUploadedFiles(array $uploadedFiles)
 * @method static static                                   setUploadedFiles(array $uploadedFiles)
 * @method        static                                   setParsedBody(object|array|null $data)
 * @method static static                                   setParsedBody(object|array|null $data)
 * @method        static                                   setAttribute(string $name, mixed $value)
 * @method static static                                   setAttribute(string $name, mixed $value)
 * @method        static                                   removeAttribute(string $name)
 * @method static static                                   removeAttribute(string $name)
 * @method        mixed                                    get(?string $name = NULL, mixed $default = NULL)
 * @method static mixed                                    get(?string $name = NULL, mixed $default = NULL)
 * @method        mixed                                    post(?string $name = NULL, mixed $default = NULL)
 * @method static mixed                                    post(?string $name = NULL, mixed $default = NULL)
 * @method        bool                                     hasGet(string $name)
 * @method static bool                                     hasGet(string $name)
 * @method        bool                                     hasPost(string $name)
 * @method static bool                                     hasPost(string $name)
 * @method        mixed                                    request(?string $name = NULL, mixed $default = NULL)
 * @method static mixed                                    request(?string $name = NULL, mixed $default = NULL)
 * @method        bool                                     hasRequest(string $name)
 * @method static bool                                     hasRequest(string $name)
 * @method        static                                   withGet(array $get)
 * @method static static                                   withGet(array $get)
 * @method        static                                   setGet(array $get)
 * @method static static                                   setGet(array $get)
 * @method        static                                   withPost(mixed $post)
 * @method static static                                   withPost(mixed $post)
 * @method        static                                   setPost(mixed $post)
 * @method static static                                   setPost(mixed $post)
 * @method        static                                   withRequest(array $request)
 * @method static static                                   withRequest(array $request)
 * @method        static                                   setRequest(array $request)
 * @method static static                                   setRequest(array $request)
 * @method        array                                    getServerParams()
 * @method static array                                    getServerParams()
 * @method        array                                    getCookieParams()
 * @method static array                                    getCookieParams()
 * @method        \Psr\Http\Message\ServerRequestInterface withCookieParams(array $cookies)
 * @method static \Psr\Http\Message\ServerRequestInterface withCookieParams(array $cookies)
 * @method        array                                    getQueryParams()
 * @method static array                                    getQueryParams()
 * @method        \Psr\Http\Message\ServerRequestInterface withQueryParams(array $query)
 * @method static \Psr\Http\Message\ServerRequestInterface withQueryParams(array $query)
 * @method        array                                    getUploadedFiles()
 * @method static array                                    getUploadedFiles()
 * @method        \Psr\Http\Message\ServerRequestInterface withUploadedFiles(array $uploadedFiles)
 * @method static \Psr\Http\Message\ServerRequestInterface withUploadedFiles(array $uploadedFiles)
 * @method        array|object|null                        getParsedBody()
 * @method static null|array|object                        getParsedBody()
 * @method        \Psr\Http\Message\ServerRequestInterface withParsedBody($data)
 * @method static \Psr\Http\Message\ServerRequestInterface withParsedBody($data)
 * @method        array                                    getAttributes()
 * @method static array                                    getAttributes()
 * @method        mixed                                    getAttribute(string $name, $default = NULL)
 * @method static mixed                                    getAttribute(string $name, $default = NULL)
 * @method        \Psr\Http\Message\ServerRequestInterface withAttribute(string $name, $value)
 * @method static \Psr\Http\Message\ServerRequestInterface withAttribute(string $name, $value)
 * @method        \Psr\Http\Message\ServerRequestInterface withoutAttribute(string $name)
 * @method static \Psr\Http\Message\ServerRequestInterface withoutAttribute(string $name)
 * @method        string                                   getRequestTarget()
 * @method static string                                   getRequestTarget()
 * @method        \Psr\Http\Message\RequestInterface       withRequestTarget(string $requestTarget)
 * @method static \Psr\Http\Message\RequestInterface       withRequestTarget(string $requestTarget)
 * @method        string                                   getMethod()
 * @method static string                                   getMethod()
 * @method        \Psr\Http\Message\RequestInterface       withMethod(string $method)
 * @method static \Psr\Http\Message\RequestInterface       withMethod(string $method)
 * @method        \Psr\Http\Message\UriInterface           getUri()
 * @method static \Psr\Http\Message\UriInterface           getUri()
 * @method        \Psr\Http\Message\RequestInterface       withUri(\Psr\Http\Message\UriInterface $uri, bool $preserveHost = false)
 * @method static \Psr\Http\Message\RequestInterface       withUri(\Psr\Http\Message\UriInterface $uri, bool $preserveHost = false)
 * @method        string                                   getProtocolVersion()
 * @method static string                                   getProtocolVersion()
 * @method        \Psr\Http\Message\MessageInterface       withProtocolVersion(string $version)
 * @method static \Psr\Http\Message\MessageInterface       withProtocolVersion(string $version)
 * @method        string[][]                               getHeaders()
 * @method static string[][]                               getHeaders()
 * @method        bool                                     hasHeader(string $name)
 * @method static bool                                     hasHeader(string $name)
 * @method        string[]                                 getHeader(string $name)
 * @method static string[]                                 getHeader(string $name)
 * @method        string                                   getHeaderLine(string $name)
 * @method static string                                   getHeaderLine(string $name)
 * @method        \Psr\Http\Message\MessageInterface       withHeader(string $name, $value)
 * @method static \Psr\Http\Message\MessageInterface       withHeader(string $name, $value)
 * @method        \Psr\Http\Message\MessageInterface       withAddedHeader(string $name, $value)
 * @method static \Psr\Http\Message\MessageInterface       withAddedHeader(string $name, $value)
 * @method        \Psr\Http\Message\MessageInterface       withoutHeader(string $name)
 * @method static \Psr\Http\Message\MessageInterface       withoutHeader(string $name)
 * @method        \Psr\Http\Message\StreamInterface        getBody()
 * @method static \Psr\Http\Message\StreamInterface        getBody()
 * @method        \Psr\Http\Message\MessageInterface       withBody(\Psr\Http\Message\StreamInterface $body)
 * @method static \Psr\Http\Message\MessageInterface       withBody(\Psr\Http\Message\StreamInterface $body)
 * @method        static                                   setRequestTarget(string $requestTarget)
 * @method static static                                   setRequestTarget(string $requestTarget)
 * @method        static                                   setMethod(string $method)
 * @method static static                                   setMethod(string $method)
 * @method        static                                   setUri(\Psr\Http\Message\UriInterface $uri, bool $preserveHost = false)
 * @method static static                                   setUri(\Psr\Http\Message\UriInterface $uri, bool $preserveHost = false)
 * @method        \Psr\Http\Message\UriInterface           getAppUri(?string $serverName = NULL)
 * @method static \Psr\Http\Message\UriInterface           getAppUri(?string $serverName = NULL)
 */
class RequestProxy extends BaseRequestContextProxy
{
}
